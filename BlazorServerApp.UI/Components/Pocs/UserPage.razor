@page "/usersui"
@using BlazorServerApp.BLL.Interface
@using BlazorServerApp.Model.EntityModel
@inject IUserService UserService
@inject IHttpContextAccessor HttpContextAccessor
@* @rendermode InteractiveServer *@

<h2 class="text-2xl font-semibold mb-4">User Management</h2>
<EditForm Model="@newUser" OnValidSubmit="@AddUser" FormName="AddUserForm">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="mb-2">
		<label>Name:</label>
		<InputText @bind-Value="newUser.Name" class="form-control" />
	</div>

	<div class="mb-2">
		<label>Email:</label>
		<InputText @bind-Value="newUser.Email" class="form-control" />
	</div>

	<button type="submit" class="btn btn-primary">Add User</button>
</EditForm>

<hr class="my-4" />

<!-- User List -->
<table class="table">
	<thead>
		<tr>
			<th>ID</th>
			<th>Name</th>
			<th>Email</th>
			<th>Action</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var user in users)
		{
			<tr>
				<td>@user.Id</td>
				<td>@user.Name</td>
				<td>@user.Email</td>
				<td>
					<button class="btn btn-danger btn-sm" @onclick="() => DeleteUser(user.Id)">Delete</button>
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	private List<User> users = new();
	private User newUser = new();

	protected override async Task OnInitializedAsync()
	{
		string cookieValue = HttpContextAccessor.HttpContext.Request.Cookies["MyCookie"];
		await LoadUsers();
	}

	private async Task LoadUsers()
	{
		var result = await UserService.GetAllUsersAsync();
		users = result.ToList();
	}

	private async Task AddUser()
	{
		var userObj = new User
			{
				Name = newUser.Name,
				Email = newUser.Email
			};

		await UserService.AddUserAsync(newUser);
		newUser = new(); // reset form
		await LoadUsers();
	}

	private async Task DeleteUser(int id)
	{
		await UserService.DeleteUserAsync(id);
		await LoadUsers();
	}
}
